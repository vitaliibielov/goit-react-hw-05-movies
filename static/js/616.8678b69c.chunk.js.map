{"version":3,"file":"static/js/616.8678b69c.chunk.js","mappings":"mOACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA+F,6BAA/F,EAAwI,gCAAxI,EAAmL,+BAAnL,EAA8N,gCAA9N,EAAqQ,2BAArQ,EAAsS,0B,SCmEtS,EA5DqB,WAAO,IAAD,IACjBA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAOP,IAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAASM,EAAb,GAClC,GAAC,CAACL,IAECF,EAAJ,CAEA,IAAMQ,EAAY,oBAAGX,EAASY,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACI,iCACI,SAAC,KAAD,CAAMC,GAAIH,EAAcI,UAAWC,EAAnC,sBACA,iBAAKD,UAAWC,EAAhB,WACI,gBACAD,UAAWC,EACXC,IAAG,yCAAoCd,EAAMe,aAC7CC,IAAI,MAEJ,iBAAKJ,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,0BACKb,EAAMiB,MADX,KAEK,IAAIC,KAAKlB,EAAMmB,cAAcC,cAFlC,QAIA,wCACiBC,KAAKC,MAA2B,GAArBtB,EAAMuB,cADlC,SAGA,sCACA,uBAAKvB,EAAMwB,YACX,mCACCxB,EAAMyB,QACHzB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAEnD,iBAAKjB,UAAWC,EAAhB,WACI,oDACA,gBAAID,UAAWC,EAAf,WACI,yBACI,SAAC,KAAD,CAAMF,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAAgBI,UAAWC,EAA1D,qBAIJ,yBACI,SAAC,KAAD,CAAMF,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAgBI,UAAWC,EAA7D,oCAQpB,SAAC,KAAD,MA7CS,CAgDpB,C,sLC9DKiB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvB7B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjB8B,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNK,MAAOA,KAHiB,uBACpB/B,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdF,EAAY,mCAAG,WAAMkC,GAAN,yFACHT,EAASM,IAAT,iBAAuBG,IADpB,uBAClBhC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZiC,EAAe,mCAAG,WAAMD,GAAN,yFACNT,EAASM,IAAT,iBAAuBG,EAAvB,aADM,uBACrBhC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKkC,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNT,EAASM,IAAT,iBAAuBG,EAAvB,aADM,uBACrBhC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKoC,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__wv3O1\",\"movie\":\"MovieDetails_movie__e4Hw7\",\"poster\":\"MovieDetails_poster__s+oXh\",\"movieInfo\":\"MovieDetails_movieInfo__RFaEp\",\"mainInfo\":\"MovieDetails_mainInfo__1oNJW\",\"extraInfo\":\"MovieDetails_extraInfo__6vFeS\",\"list\":\"MovieDetails_list__ecyjU\",\"btn\":\"MovieDetails_btn__t5pTm\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'service/Api';\n\nimport css from './MovieDetails.module.css';\n\n\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const [movie, setMovie] = useState(null);\n    const {movieId} = useParams();\n    // const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(()=>{\n        getMovieById(movieId).then(data => setMovie(data))\n    },[movieId])\n\n    if(!movie) return;\n\n    const backLinkHref = location.state?.from ?? '/';\n\n    return (\n        <>\n            <Link to={backLinkHref} className={css.link}>Go Back</Link>\n            <div className={css.movie}>\n                <img\n                className={css.poster}\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt=\"\"\n                />\n                <div className={css.movieInfo}>\n                    <div className={css.mainInfo}>\n                        <h2 >\n                            {movie.title} (\n                            {new Date(movie.release_date).getFullYear()})\n                        </h2>\n                        <p >\n                            User Score: {Math.round(movie.vote_average * 10)} %\n                        </p>\n                        <h3 >Overview</h3>\n                        <p >{movie.overview}</p>\n                        <h3 >Genres</h3>\n                        {movie.genres &&\n                            movie.genres.map(genre => genre.name).join(', ')}\n                    </div>\n                    <div className={css.extraInfo}>\n                        <h3 >Additional information</h3>\n                        <ul className={css.list}>\n                            <li >\n                                <Link to=\"cast\" state={{ from: backLinkHref }} className={css.btn}>\n                                Cast\n                                </Link>\n                            </li>\n                            <li >\n                                <Link to=\"reviews\" state={{ from: backLinkHref }} className={css.btn}>\n                                Reviews\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Outlet />\n        </>\n    ) \n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};"],"names":["location","useLocation","useState","movie","setMovie","movieId","useParams","useEffect","getMovieById","then","data","backLinkHref","state","from","to","className","css","src","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getSearchMovie","query","id","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}