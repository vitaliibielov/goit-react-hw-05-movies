{"version":3,"file":"static/js/154.118779c8.chunk.js","mappings":"2LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAsF,yBAAtF,EAAwH,0B,SCK3GA,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,eAAIC,UAAWC,EAAf,SAA0BJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACjC,eAAaL,UAAWC,EAAxB,UACE,UAAC,KAAD,CAAMK,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMV,GAAYE,UAAWC,EAAjE,WACE,gBACAD,UAAWC,EACTQ,IACEJ,EAAW,0CAC4BA,GAZpC,wHAeLK,IAAKN,KAEP,uBAAIA,QAXCD,EADwB,KAkB5C,C,gFC1BD,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAsF,uB,SCCzEQ,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAOxB,OACE,kBAAMA,SAPW,SAAAC,GACjBA,EAAIC,iBAEJF,EAASC,EAAIE,OAAOC,SAASC,MAAMC,MACpC,EAG6BlB,UAAWC,EAAvC,WACE,kBAAOD,UAAWC,EAChBkB,KAAK,QACLC,KAAK,OACLC,YAAY,kBAEd,mBAAQrB,UAAWC,EAASmB,KAAK,SAAjC,sBAKL,E,mCCOH,EArBe,WACX,OAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACMC,EAAYJ,EAAaK,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACFF,IACJG,EAAAA,EAAAA,IAAeH,GAAWI,MAAK,YAAc,IAAZC,EAAW,EAAXA,QAAYN,EAAUM,EAAS,GACnE,GAAE,CAACL,IAKJ,OACI,iCACA,SAAChB,EAAD,CAAWC,SALU,SAAAM,GACrBM,EAA0B,KAAVN,EAAe,CAAED,MAAOC,GAAU,CAAC,EACtD,IAIIrB,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,MAGrC,C,sLCtBKoC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASL,IAAI,uBADL,uBACvBW,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBT,EAAc,mCAAG,WAAMb,GAAN,yFACLgB,EAASL,IAAI,gBAAiB,CACnDQ,OAAQ,CACNnB,MAAOA,KAHiB,uBACpBsB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdC,EAAY,mCAAG,WAAMrC,GAAN,yFACH8B,EAASL,IAAT,iBAAuBzB,IADpB,uBAClBoC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAe,mCAAG,WAAMtC,GAAN,yFACN8B,EAASL,IAAT,iBAAuBzB,EAAvB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKG,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMxC,GAAN,yFACN8B,EAASL,IAAT,iBAAuBzB,EAAvB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKP,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"title\":\"MovieList_title__QyMtJ\",\"poster\":\"MovieList_poster__UbPpc\"};","import { Link, useLocation } from \"react-router-dom\"\n\nimport css from './MovieList.module.css';\n\nconst imgPlaceholder = 'https://holstovich.art/content/images/1/1000x1000l80br20/kartina-russkiy-voennyy-korabl-idi-nakhy-50804578290634.webp';\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n        <ul className={css.list}>{movies.map(({ id, title, poster_path }) => (\n            <li key={id} className={css.item}>\n              <Link to={`/movies/${id}`} state={{ from: location }} className={css.title}>\n                <img\n                className={css.poster}\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : imgPlaceholder\n                  }\n                  alt={title}\n                />\n                <p>{title}</p>\n              </Link>\n            </li>\n            ))}\n            </ul>\n    ) \n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBox_form__GByKm\",\"input\":\"SearchBox_input__+nuoc\",\"btn\":\"SearchBox_btn__YGf58\"};","import css from './SearchBox.module.css';\n\nexport const SearchBox = ({ onSubmit }) => {\n    const submitForm = evt => {\n      evt.preventDefault();\n  \n      onSubmit(evt.target.elements.query.value);\n    };\n  \n    return (\n      <form onSubmit={submitForm} className={css.form}>\n        <input className={css.input}\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Search films\"\n        />\n        <button className={css.btn} type=\"submit\">\n            Search\n        </button>\n      </form>\n    );\n  };","\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'service/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState(null);\n    const movieName = searchParams.get('query');\n\n    useEffect(()=>{\n        if(!movieName) return;\n        getSearchMovie(movieName).then(({results})=>{setMovies(results)});\n    }, [movieName]);\n\n    const handleFormSubmit = value => {\n        setSearchParams(value !== '' ? { query: value } : {});\n    };\n    return (\n        <>\n        <SearchBox onSubmit={handleFormSubmit}/>\n        {movies && <MovieList movies={movies}/>}\n        </>\n    ) \n}\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};"],"names":["MovieList","movies","location","useLocation","className","css","map","id","title","poster_path","to","state","from","src","alt","SearchBox","onSubmit","evt","preventDefault","target","elements","query","value","name","type","placeholder","useSearchParams","searchParams","setSearchParams","useState","setMovies","movieName","get","useEffect","getSearchMovie","then","results","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}